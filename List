#include <iostream>

using namespace std;

struct Node {
	Node * prev;
	int value;
	Node * next;
};

class List {
private:
	Node* phead = nullptr;
	Node* ptail = nullptr;
	int counter = 0;
public:
	List() {
		phead = nullptr;
		ptail = nullptr;
	}

	void AddToTail(int x) {
		Node* tmp = new Node;

		tmp->value = x;
		tmp->next = nullptr;
		tmp->prev = nullptr;

		if (phead != nullptr)
		{
			ptail->next = tmp;
			tmp->prev = ptail;
			ptail = tmp;
			counter++;
		}
		else
		{
			phead = ptail = tmp;
			counter++;
		}
	}

	void AddToHead(int x) {

		Node* tmp = new Node;
		tmp->value = x;
		tmp->next = nullptr;
		tmp->prev = nullptr;

		if (ptail != nullptr)
		{
			tmp->next = phead;
			phead->prev = tmp;
			phead = tmp;
			counter++;

		}
		else
		{
			phead = ptail = tmp;
			counter++;
		}
	}


	void Show() {
		Node* tmp = phead;
		for (int i = 0; i < counter; i++)
		{
			cout << i << " element is " << tmp->value << endl;
			tmp = tmp->next;
		}
	}

	void DelFromHead() {
		Node* tmp = phead;
		phead = tmp->next;
		phead->prev = nullptr;
		delete tmp;
		counter--;
	}

	void DelFromTail() {
		Node* tmp2 = phead;

		for (int i = 0; i < counter - 1; i++)
		{
			tmp2 = tmp2->next;
		}

		ptail = tmp2;
		delete tmp2->next;
		counter--;
	}
	void DeleteAll() {
		while (counter)
		{
			this->DelFromHead();
		}
	}
	List Reverse() {
		Node* tmp = phead;
		List new_list;
		for (int i = 0; i < counter; i++)
		{
			new_list.AddToHead(tmp->value);
			tmp = tmp->next;
		}
		return new_list;
	}
	Node* GetNode(int index) {
		Node* tmp = phead;

		for (int i = 0; i <= index; i++)
		{
			tmp = tmp->next;
		}
		return tmp;
	}
	int GetCounter() {
		return this->counter;
	}
};

List operator+(List &n1, List &n2) {
	List n3;

	int c1, c2, c3;
	c1 = n1.GetCounter();
	c2 = n2.GetCounter();
	c3 = c2 + c1;

	Node* tmp = n1.GetNode(0);
	
	for (int i = 0; i < c1; i++)
	{
		n3.AddToHead(tmp->value);
		tmp = tmp->next;
	}

	tmp = n2.GetNode(0);
	for (int i = 0; i < c2; i++)
	{
		n3.AddToHead(tmp->value);
		tmp = tmp->next;
	}
	return n3;
}

int main() {
	List list;
	int x;
	for (int i = 0; i < 5; i++)
	{
		cout << "Enter " << i << " element: ";
		cin >> x;
		list.AddToTail(x);
	}

	cout << "Enter 6 element: ";
	cin >> x;
	list.AddToHead(x);



	list.DelFromTail();
	list.DelFromHead();
	list.DeleteAll();
	cout << endl << endl;
	list.Show();
	cout << "\n\n\n";
	List new_list = list.Reverse();
	new_list.Show();

	system("pause");
	return 0;
}
